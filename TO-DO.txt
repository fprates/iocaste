TO-DO

iocaste-appbuilder
-Implement a remote spec, config, style and input provider, so the consumer app doesn't need to be rebuilt on each view update (only for StandardPanel).
-Define expected behavior in AbstractDashboardRenderer, so StandardDashboardRenderer can be dropped;
-AbstractDashboardRenderer must store its key-value pair not in view element, but in its own map;
-Filter and Reorder dashes positions (based on each of its key-value pairs);
-Move dashcontext from left bar to dash's bottom;
-Split DataForm behavior from its context (DataFormTool and DataFormContext, maybe?);
-Replace javascript events for css events when possible;

iocaste-texteditor
-Replace current file implementation by kernel's;

iocaste-kernel
-Turn security manager on;
-Support for slaves bases: Login on master base, route to specific slave base);
-DO NOT EXPOSE PASSWORD throught the API; (reimplement password aquisition from iocaste-userditor);
-Turn kernel object and package aware;
-Avoid app see objects of other packages;

iocaste-transport
-Transport archive with projects' source code to a target;
-Further binary redistribution to other targets;

iocaste-workbench
-Unpacking, building and deploying in target (needs further elaboration);

iocaste-shell
-View structure deduplication. Store it no more. Just update and send it to the app;
-Move current state structures to kernel: SessionContext, PageContext;
-Support https;
-'mobile version' flag at the login page (implement a MobileRenderer (inherited from current HtmlRenderer, maybe?)). Reimplement TableRenderer proper render in small screens;
-Strip all control logic from Table. Move it to TableTool (including mark behavior);
-Support for multiple pages in TableRenderer;
-Move DataForm implementation to iocaste-appbuilder. It's too complex to be here.

Iocaste-documents
-Implement of ProcessModel and BusinessProcess (ComplexDocument's tree);
-Implement standard BusinessProcess editor (needs further elaboration).

